/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"

enum action_t {
	ADD,
	SUBTRACT,
	MULTIPLY,
	DIVIDE,
	CHS,
	CLEAR,
	SWAP,
	ROTATE,
	PUSH,
	VALUE
};

int T=0,Z=0,Y=0,X=0;
int tmp;
char read_char;
void pop(){
	X = Y;
	Y = Z;
	Z = T;
};

void exec(enum action_t operator){
	switch(operator) {
	case ADD:
		Y = X + Y;
		pop();
		break;
	case SUBTRACT:
		Y = X - Y;
		pop();
		break;
	case MULTIPLY:
		Y = X * Y;
		pop();
		break;
	case DIVIDE:
		Y = X / Y;
		pop();
		break;
	case CHS:
		X = -X;
		break;
	case CLEAR:
		X = 0;
		break;
	case SWAP:
		tmp = X;
		X = Y;
		Y = tmp;
		break;
	case ROTATE:
		tmp = X;
		X = Y;
		Y = Z;
		Z = T;
		T = tmp;
		break;
	case PUSH:
		T = Z;
		Z = Y;
		Y = X;
		X = 0;
		break;
	case VALUE:
		tmp = read_char - '0';
		X = X * 10 + tmp;
		break;
	};
}

enum action_t read(){
	read_char = inbyte();
	enum action_t result;

	switch(read_char){
	case '+':
		return ADD;
	case '-':
		return SUBTRACT;
	case '*':
		return MULTIPLY;
	case '/':
		return DIVIDE;
	case 'S':
		return CHS;
	case 'C':
		return CLEAR;
	case 'X':
		return SWAP;
	case 'R':
		return ROTATE;
	case 10:
		return PUSH;
	default:
		if(read_char >= '0' and read_char <= '9' ){
			return VALUE;
		}

	}
}

int main()
{
    init_platform();

    print("Hello World\n\r");

    cleanup_platform();
    return 0;
}
